version: "3.8"
services:

  banner_service:
    container_name: banner_service
    build: .
    env_file: .env
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - HTTP_PORT=${HTTP_PORT}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - ADMIN_TOKEN=${ADMIN_TOKEN}
      - USER_TOKEN=${USER_TOKEN}
    ports:
      - "8080:8080"
    volumes:
      - .:/src/app
    command: go run cmd/main.go
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

  postgres:
    container_name: postgres
    image: postgres:15.0
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      test: [ 'CMD-SHELL', 'psql -h localhost -U $${POSTGRES_USER} -c select 1 -d $${POSTGRES_DB}' ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 5s
    volumes:
      - ./sql/init.sql:/docker-entrypoint-initdb.d/10-init.sql
      - ./postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    container_name: redis
    image: "redis:alpine"
    expose:
      - "6379"
    ports:
      - "6379:6379"
    volumes:
      - ./redis-cache:/data
    restart: on-failure